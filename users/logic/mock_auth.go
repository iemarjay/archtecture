// Code generated by MockGen. DO NOT EDIT.
// Source: auth.go

// Package logic is a generated GoMock package.
package logic

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockauthRepository is a mock of authRepository interface.
type MockauthRepository struct {
	ctrl     *gomock.Controller
	recorder *MockauthRepositoryMockRecorder
}

// MockauthRepositoryMockRecorder is the mock recorder for MockauthRepository.
type MockauthRepositoryMockRecorder struct {
	mock *MockauthRepository
}

// NewMockauthRepository creates a new mock instance.
func NewMockauthRepository(ctrl *gomock.Controller) *MockauthRepository {
	mock := &MockauthRepository{ctrl: ctrl}
	mock.recorder = &MockauthRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockauthRepository) EXPECT() *MockauthRepositoryMockRecorder {
	return m.recorder
}

// FindByUniqueFields mocks base method.
func (m *MockauthRepository) FindByUniqueFields(arg0 string) (*UserData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByUniqueFields", arg0)
	ret0, _ := ret[0].(*UserData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByUniqueFields indicates an expected call of FindByUniqueFields.
func (mr *MockauthRepositoryMockRecorder) FindByUniqueFields(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByUniqueFields", reflect.TypeOf((*MockauthRepository)(nil).FindByUniqueFields), arg0)
}
